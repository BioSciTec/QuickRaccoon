<Application x:Class="QuickRaccoon.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:QuickRaccoon"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>

            <Color x:Key="baseYellow">#FFC107</Color>
            <Color x:Key="highlightYellow">#FFFFF3CD</Color>
            <Color x:Key="Gray">#FF9E9E9E</Color>
            <Color x:Key="cyan">#FF00BCD4</Color>
            <SolidColorBrush x:Key="baseYellowBrush" Color="{StaticResource baseYellow}" />
            <SolidColorBrush x:Key="highlightYellowBrush" Color="{StaticResource highlightYellow}" />
            <SolidColorBrush x:Key="grayBrush" Color="{StaticResource Gray}" />
            <SolidColorBrush x:Key="cyanBrush" Color="{StaticResource cyan}" />


            <Style x:Key="ButtonStyle" TargetType="Button">
                <Setter Property="Width" Value="250"/>
                <Setter  Property="Height" Value="50"/>
                <Setter Property="Background" Value="{StaticResource cyanBrush }" />
                <Setter Property="Margin" Value="10" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Background" Value="{StaticResource baseYellowBrush}"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="true">
                        <Setter Property="Background" Value="{StaticResource grayBrush}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="MinWidth" Value="250"/>
                <Setter Property="MaxWidth" Value="350"/>
                <Setter Property="TextWrapping" Value="Wrap"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Foreground" Value="{StaticResource grayBrush}"/>
            </Style>

            <ControlTemplate x:Key="TextErrorTemplate">
                <StackPanel Orientation="Vertical">
                    <AdornedElementPlaceholder x:Name="ErrorAdorner">
                        <Border BorderBrush="Red" BorderThickness="2" CornerRadius="4" HorizontalAlignment="Stretch"/>
                    </AdornedElementPlaceholder>
                    <TextBlock Foreground="Red" HorizontalAlignment="Right" Text="{Binding ElementName=ErrorAdorner, Path=AdornedElement.(Validation.Errors).CurrentItem.ErrorContent}"/>
                </StackPanel>
            </ControlTemplate>

            <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
                <Setter Property="Width" Value="250"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Padding" Value="5 5 5 5" />
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource TextErrorTemplate}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border x:Name="Border" CornerRadius="4"  BorderThickness="2" BorderBrush="{StaticResource grayBrush}" HorizontalAlignment="Stretch">
                                <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="Background" TargetName="Border" Value="{StaticResource highlightYellowBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="True">
                        <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self},Path=(Validation.Errors).CurrentItem.ErrorContent}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="DatePickerStyle" TargetType="{x:Type DatePicker}">
                <Setter Property="Width" Value="250"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource TextErrorTemplate}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DatePicker}">
                            <Border x:Name="Border" CornerRadius="4"  BorderThickness="2" BorderBrush="{StaticResource grayBrush}" HorizontalAlignment="Stretch">
                                <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="Background" TargetName="Border" Value="{StaticResource highlightYellowBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="True">
                        <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self},Path=(Validation.Errors).CurrentItem.ErrorContent}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="closeButtonStyle"  TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Foreground" Value="{StaticResource cyanBrush}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="Border" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <Grid>
                                    <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                                    <Path Data="M 10.009,1.704 L 8.331,0.026 5.03,3.327 1.703,0 0,1.704 3.326,5.031 0.025,8.332 1.703,10.009 5.004,6.708 8.305,10.009 10.009,8.305 6.708,5.005" Fill="{TemplateBinding Foreground}" Stretch="Fill" SnapsToDevicePixels="True" />
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Trigger.Setters>
                            <Setter Property="Foreground" Value="{StaticResource baseYellowBrush}" />
                        </Trigger.Setters>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Trigger.Setters>
                            <Setter Property="Foreground" Value="{StaticResource grayBrush}" />
                        </Trigger.Setters>
                    </Trigger>
                </Style.Triggers>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>
